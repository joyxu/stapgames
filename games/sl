#!/bin/bash
//bin/true; function strun() { /usr/bin/env stap $*; }
//bin/true; OPT=""; SOPT=""; sc=$0
//bin/true; while [ "$1" ]; do case "$1" in "-F"|"-a"|"-l") OPT=$OPT" $1";shift;
//bin/true;; *) SOPT=$SOPT" $1";shift;;esac; done
//bin/true; strun -I`dirname $sc`/../tapset $SOPT $sc -- $OPT; exit $? 
# SL -- run a steam locomotion in terminal
# Copyright (C) 2011 Masami Hiramatsu <masami.hiramatsu@gmail.com>
#
# This file is free software and is distributed under the terms of the GNU
# General Public License (GPL); either version 2, or (at your option) any
# later version.
global pos_x, pos_y
global sl, slw, slh
global pt, ptw, pth
global d_y=0, smoke, smoff, smw

function pt_init() {
	# Init passenger train
	pt =
	"         " .
	" |======|" .
	" |[_||_||" .
	"={______}" .
	"  OO  OO "
	pth = 5
	ptw = strlen(pt) / pth
}

probe begin {
	# Init SL
	sl = 
	"     *o*o*o*o*o     " .
	"    *_ =====    ___ " .
	" ___||_|[_]|  _/   |" .
	"{ ______[_]|=|_____|" .
	"/|OO==OO=OO   O   O "
	slh = 5
	slw = strlen(sl) / slh

	pos_x = game_tty_ws_col()
	pos_y = game_tty_ws_row() / 2 - 3

	# Parse parameters
	foreach ([i] in argv)
		if (argv[i] == "-F") {
			d_y = -1
			pos_y = game_tty_ws_row()
		} else if (argv[i] == "-a") {
			smoke = "*o*o*o*o*o        "
			smoff = 5
			smw = strlen(smoke)
		} else if (argv[i] == "-l") {
			pt_init();
		}
}

# String Rotation (nth rotate right)
function strrot:string (str:string, n:long)
{
	len = strlen(str)
	if (n > 0)
		return substr(str, len - n, n) . substr(str, 0, len - n)
	else
		return substr(str, -n, len + n) . substr(str, 0, -n)
}

# Print w x h pattern at (x, y)
# Automatic windowing by the tty window size
function print_pat (x:long, y:long, pat:string, w:long, h:long)
{
	col = game_tty_ws_col()
	row = game_tty_ws_row()

	px = (x >= 1) ? x : 1
	s = px - x
	e = (x + w > col) ? col - x : w
	for (py = y; py < y + h; py++) {
		if (py > row || py < 1) continue;
		ansi_cursor_move(px, py)
		print(substr(pat, (py - y) * w + s, e - s))
	}
}

probe timer.ms(60) {
	# Move
	pos_x --
	if (pos_x % 3 == 0) pos_y += d_y
	if (d_y == 0) {
		# Move following window size
		row = game_tty_ws_row()
		if (pos_y + 5 > row) pos_y = row - 5
	}

	ansi_clear_screen()

	xx = pos_x;
	# Show SL
	print_pat(xx, pos_y, sl, slw, slh)
	if (smoke != "") {
		# Show smoke animation
		print_pat(xx + smoff, pos_y, smoke, smw, 1)
		smoke = strrot(smoke, 1)
	}
	xx += slw

	if (pt != "") {
		# Show Passenger Train
		print_pat(xx, pos_y, pt, ptw, pth)
		xx += ptw
		print_pat(xx, pos_y, pt, ptw, pth)
		xx += ptw
	}

	if (xx < 0 || pos_y + 5 < 0) {
		ansi_clear_screen()
		exit()
	}
}


